var documenterSearchIndex = {"docs":
[{"location":"examples/horizons/#HORIZONS-Ephemeris-Examples","page":"HORIZONS","title":"HORIZONS Ephemeris Examples","text":"","category":"section"},{"location":"examples/horizons/","page":"HORIZONS","title":"HORIZONS","text":"The JPL HORIZONS platform provides ephemeris data as Cartesian state vectors, osculating orbital elements, and other representations. The precise REST API accepted by the JPL HORIZONS servers is implemented in Julia with HorizonsAPI.jl.","category":"page"},{"location":"examples/horizons/","page":"HORIZONS","title":"HORIZONS","text":"using HorizonsAPI\n\nfetch_vectors(399; format=\"text\") # Earth's position w.r.t. the solar system barycenter","category":"page"},{"location":"examples/horizons/","page":"HORIZONS","title":"HORIZONS","text":"The CENTER parameter specifies the ephemeris reference position.","category":"page"},{"location":"examples/horizons/","page":"HORIZONS","title":"HORIZONS","text":"fetch_vectors(499; format=\"text\", CENTER=\"@399\") # Mars' position w.r.t. Earth","category":"page"},{"location":"examples/horizons/","page":"HORIZONS","title":"HORIZONS","text":"The response from the HORIZONS API contains a lot of information! To more simply fetch and inspect ephemeris data from JPL HORIZONS servers, use the ephemeris method in HorizonsEphemeris.jl.","category":"page"},{"location":"examples/horizons/","page":"HORIZONS","title":"HORIZONS","text":"using Dates, HorizonsEphemeris\n\nephemeris(\"earth\", now())","category":"page"},{"location":"examples/horizons/","page":"HORIZONS","title":"HORIZONS","text":"The output of ephemeris is a NamedTuple, so you can easily pass it along to DataFrames.jl for convenient inspection & data processing. Note the wrt keyword argument as well; it is a simplified interface to the HORIZONS API CENTER argument.","category":"page"},{"location":"examples/horizons/","page":"HORIZONS","title":"HORIZONS","text":"using DataFrames\n\ndata = DataFrame(\n    ephemeris(\"earth\", now() - Year(50), now() + Year(5), Day(1); wrt=\"jupiter\")\n)","category":"page"},{"location":"examples/horizons/","page":"HORIZONS","title":"HORIZONS","text":"This example wouldn't be complete without some plotting!","category":"page"},{"location":"examples/horizons/","page":"HORIZONS","title":"HORIZONS","text":"using Plots\n\nfigure = plot(\n    data.x, data.y;\n    xlabel=\"X (KM)\", ylabel=\"Y (KM)\", label=:none,\n    title=\"Earth's Position w.r.t. Jupiter\"\n);","category":"page"},{"location":"examples/horizons/","page":"HORIZONS","title":"HORIZONS","text":"figure # hide","category":"page"},{"location":"examples/spice/#SPICE-Ephemeris-Examples","page":"SPICE","title":"SPICE Ephemeris Examples","text":"","category":"section"},{"location":"examples/spice/","page":"SPICE","title":"SPICE","text":"The SPICEBodies.KernelBody type allows us to idiomatically query information from the SPICE kernel pool. First, download some common generic kernels (such as de432s below) and load them into the kernel pool with SPICE.furnsh. If you want more information about what's in each kernel, inspect each kernel's docstring; for example, @doc de432s, or help?> de432s in Julia's REPL.","category":"page"},{"location":"examples/spice/","page":"SPICE","title":"SPICE","text":"using SPICE, SPICEKernels, SPICEBodies\n\nreturn furnsh(\n    de432s(),                   # position and velocity data for nearby planets\n    latest_leapseconds_lsk(),   # timekeeping, parsing epochs\n    gm_de440(),                 # mass parameters for major solar system bodies\n    pck00011(),                 # physical properties of major solar system bodies\n)\n\nearth = KernelBody(\"earth\")","category":"page"},{"location":"examples/spice/","page":"SPICE","title":"SPICE","text":"We can now call the earth variable like a function of time, and get back the positions (and velocities) interpolated by CSPICE from the data in the kernel pool.","category":"page"},{"location":"examples/spice/","page":"SPICE","title":"SPICE","text":"using Dates\n\ntimepoints = DateTime(1950,1,1) : Month(1) : DateTime(2049,1,1)\n\nstates = earth.(timepoints)","category":"page"},{"location":"examples/spice/","page":"SPICE","title":"SPICE","text":"Finally, let's plot the data we just collected.","category":"page"},{"location":"examples/spice/","page":"SPICE","title":"SPICE","text":"using Plots\n\nfigure = let x = map(u -> u[begin], states), y = map(u -> u[begin+1], states)\n    scatter(\n        x, y;\n        label=nothing, markersize=1,\n        xlabel=\"X (KM)\", ylabel=\"Y (KM)\", zlabel=\"Z (KM)\",\n        title=\"Earth's Position w.r.t. SSB\",\n        aspect_ratio=1,\n    );\nend","category":"page"},{"location":"examples/spice/","page":"SPICE","title":"SPICE","text":"figure # hide","category":"page"},{"location":"examples/#Ephemeris-Package-Examples","page":"Ephemeris Package Examples","title":"Ephemeris Package Examples","text":"","category":"section"},{"location":"examples/","page":"Ephemeris Package Examples","title":"Ephemeris Package Examples","text":"Navigating ephemeris platforms — and processing ephemeris data — can sometimes have a steep learning curve. For simple blocks of code to get you up and running with loading and plotting ephemeris data, check out the SPICE or HORIZONS examples, or the documentation pages for each individual package in the drop-down menu above.","category":"page"},{"location":"#About-Ephemeris","page":"About Ephemeris","title":"About Ephemeris","text":"","category":"section"},{"location":"","page":"About Ephemeris","title":"About Ephemeris","text":"The positions, velocities, and other attributes of physical objects in our solar system are tracked by professionals around the world. NASA maintains two sources for solar system ephemeris data: the HORIZONS platform, and Generic SPICE Kernels updated (roughly) daily.","category":"page"},{"location":"#JPL-HORIZONS","page":"About Ephemeris","title":"JPL HORIZONS","text":"","category":"section"},{"location":"","page":"About Ephemeris","title":"About Ephemeris","text":"HORIZONS allows for querying ephemeris for specific bodies at specific time points through a REST interface, a graphical web interface, a telnet command-line interface, and an email interface. Students commonly use the graphical web interface, but programmatically fetching and processing ephemeris data is useful for more formal and replicable analysis. The open-source packages below allow for programmatic and interactive ephemeris fetching from the JPL HORIZONS ephemeris platform. Packages marked external are not affiliated with ephemeris.loopy.codes.","category":"page"},{"location":"","page":"About Ephemeris","title":"About Ephemeris","text":"Package Description Location\nHorizonsAPI.jl A precise JPL HORIZONS REST API client implementation, with keyword arguments for each acceptable parameter. \nHorizonsEphemeris.jl Convenience wrappers around the JPL HORIZONS REST API. \nHorizons.jl Functions for spawning the telnet interface, and querying files. external","category":"page"},{"location":"#SPICE-Toolkit","page":"About Ephemeris","title":"SPICE Toolkit","text":"","category":"section"},{"location":"","page":"About Ephemeris","title":"About Ephemeris","text":"SPICE data is packaged in binary files referred to as kernels. Kernel data can be parsed and processed with JPL's CSPICE library. Users of the Julia Programming Language can call CSPICE routines from within Julia with SPICE.jl.","category":"page"},{"location":"","page":"About Ephemeris","title":"About Ephemeris","text":"Package Description Location\nSPICEKernels.jl All generic kernels exported as variable constants. \nSPICEBodies.jl Idiomatic wrappers around SPICE and SPICE.jl methods. \nSPICEApplications.jl Function interfaces to the SPICE Toolkit executables from within Julia. \nSPICE.jl A Julia interface to the CSPICE library provided by NASA JPL. external\nEphemerides.jl Ephemeris kernel reading and interpolation in pure Julia. external","category":"page"},{"location":"#Getting-Started","page":"About Ephemeris","title":"Getting Started","text":"","category":"section"},{"location":"","page":"About Ephemeris","title":"About Ephemeris","text":"These two ephemeris platforms — HORIZONS and SPICE — are both free to use, and have been incredibly helpful to students and researchers around the world. The Julia packages above — and others — available to help you fetch and parse ephemeris data. For more information on how to use these packages, continue on to the documentation examples.","category":"page"}]
}
